{"version":3,"file":"static/js/806.4c63ab27.chunk.js","mappings":"oMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C,6HClBYK,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,kBAAMA,SAAUA,EAAhB,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,UAAU,KAAKC,aAAa,QAC5D,mBAAQH,KAAK,SAAb,sBAGL,E,0BCuCD,EAxCmB,WAAO,IAAD,EACvB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAoB,mCAAG,gHAECC,EAAAA,EAAAA,IAAmBJ,GAFpB,gBAEjBK,EAFiB,EAEjBA,QACRT,EAAUS,GAHe,gDAKzBC,QAAQC,IAAI,KAAMC,SALO,yDAAH,qDAQ1BL,GATC,CAUF,GAAE,CAACH,IAcJ,OACE,4BACE,SAACX,EAAD,CAAWC,SAdM,SAAAmB,GACnBA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,cAAcC,SAASb,MAAMc,MAEjC,KAAfH,GAKJZ,EAAgB,CAAEC,MAAOW,IACzBF,EAAIG,cAAcG,SALhBC,MAAM,0DAMT,IAIIpC,EAAOqC,OAAS,IAAK,SAACtC,EAAA,EAAD,CAAYC,OAAQA,MAG/C,C,+LC1CDsC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCACUC,EADV,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qDAOnBC,EAAqB,mCAAG,WAAMC,GAAN,uFACZN,EAAAA,EAAAA,IAAA,iBACXO,OAAOD,GADI,oBACgBL,EADhB,oBADY,cAC7BE,EAD6B,yBAK5BA,EAASC,MALmB,2CAAH,sDAQrBI,EAAa,mCAAG,WAAMF,GAAN,uFACJN,EAAAA,EAAAA,IAAA,iBACXO,OAAOD,GADI,4BACwBL,EADxB,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObK,EAAgB,mCAAG,WAAMH,GAAN,uFACPN,EAAAA,EAAAA,IAAA,iBACXO,OAAOD,GADI,4BACwBL,EADxB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBlB,EAAkB,mCAAG,WAAMJ,GAAN,uFACTkB,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBnB,EADrB,uCADS,cAC1BqB,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/MoviesList/MoviesList.js","components/Searchbar/Searchbar.js","pages/MoviesPage.js","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","export const Searchbar = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"query\" autoFocus=\"on\" autoComplete=\"on\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/api';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const getMoviesListByQuery = async () => {\n      try {\n        const { results } = await fetchMoviesByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMoviesListByQuery();\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.currentTarget.elements.query.value;\n\n    if (inputValue === '') {\n      alert('Searchfield cannot be empty, please enter the film name');\n      return;\n    }\n\n    setSearchParams({ query: inputValue });\n    evt.currentTarget.reset();\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86824f16905540caf32a2109bda1bd06';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCastById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=true&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","Searchbar","onSubmit","type","name","autoFocus","autoComplete","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesListByQuery","fetchMoviesByQuery","results","console","log","message","evt","preventDefault","inputValue","currentTarget","elements","value","reset","alert","length","axios","API_KEY","fetchTrendingMovies","response","data","fetchMovieDetailsById","movieId","Number","fetchCastById","fetchReviewsById"],"sourceRoot":""}