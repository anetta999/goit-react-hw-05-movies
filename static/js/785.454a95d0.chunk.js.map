{"version":3,"file":"static/js/785.454a95d0.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,IAAiBP,GAF5B,gBAEPQ,EAFO,EAEPA,QACRJ,EAAWI,GAHI,gDAKfC,QAAQC,IAAI,KAAMC,SALH,yDAAH,qDAQhBL,GACD,GAAE,CAACN,KAGF,8BACGG,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EAKZ,OAGH,qEAIP,C,+LCrCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,sCACUC,EADV,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qDAOnBC,EAAqB,mCAAG,WAAMtB,GAAN,uFACZiB,EAAAA,EAAAA,IAAA,iBACXM,OAAOvB,GADI,oBACgBkB,EADhB,oBADY,cAC7BE,EAD6B,yBAK5BA,EAASC,MALmB,2CAAH,sDAQrBG,EAAa,mCAAG,WAAMxB,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,iBACXM,OAAOvB,GADI,4BACwBkB,EADxB,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObd,EAAgB,mCAAG,WAAMP,GAAN,uFACPiB,EAAAA,EAAAA,IAAA,iBACXM,OAAOvB,GADI,4BACwBkB,EADxB,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBI,EAAkB,mCAAG,WAAMC,GAAN,uFACTT,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBQ,EADrB,uCADS,cAC1BN,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/api';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { results } = await fetchReviewsById(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '86824f16905540caf32a2109bda1bd06';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCastById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=true&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","fetchReviewsById","results","console","log","message","length","map","author","content","id","axios","API_KEY","fetchTrendingMovies","response","data","fetchMovieDetailsById","Number","fetchCastById","fetchMoviesByQuery","query"],"sourceRoot":""}